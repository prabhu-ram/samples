function createProductCategoryController(e,t,r,o){function a(){e.productCategory.categoryName="",e.productCategory.categoryDetails=""}function c(){e.message.containsSuccessfulMessage=!1,e.message.successfulMessage=""}function u(){e.message.containsSuccessfulMessage=!0,e.message.successfulMessage="A record was added successfully"}function n(){e.validationResult.containsValidationError=!1,e.validationResult.validationSummary=""}e.productCategory={categoryName:"",categoryDetails:""},e.message={containsSuccessfulMessage:!1,successfulMessage:""},e.validationResult={containsValidationError:!1,validationSummary:""},e.createProductCategory=function(i){var l=o.getRequiredFieldValidationErrorMessage([{name:e.productCategory.categoryName||"",errorMessage:"please enter product category\n"},{name:e.productCategory.categoryDetails||"",errorMessage:"please enter product category details"}]);l.length>0?(e.validationResult.containsValidationError=!0,angular.element("#validationErrorMessage").empty(),l.forEach(function(e){angular.element("<li></li>").html(e).appendTo("#validationErrorMessage")})):r.createProductCategory(i).success(function(e){e.status&&"successful"==e.status&&u(),t(function(){c(),a(),n()},5e3)})}}function editProductCategoryController(e,t,r,o,a){function c(){o.getProductCategoryId(o.getIdFromEndPoint()).success(function(e){e&&e.productCategories&&e.productCategories.length>0&&u(e.productCategories[0])})}function u(t){e.productCategory.categoryName=t.CategoryName,e.productCategory.categoryDetails=t.Details}e.productCategory={categoryName:"",categoryDetails:""},c()}function productCategoryService(e,t){return{createProductCategory:function(t){return e.post("/createProductCategory",{productCategoryName:t.categoryName,productCategoryDetails:t.categoryDetails})},getAllProductCategories:function(){return e.get("/getAllProductCategory")},getIdFromEndPoint:function(){var e=t.absUrl(),r=e.split("/"),o=r[r.length-1];return o},getProductCategoryId:function(t){return e.get("/getProductCategoryById/"+t)}}}function requiredFieldValidationService(){function e(e){var t=[];return e.length>0&&angular.forEach(e,function(e){"undefined"===e.name||null!==e.name&&""!==e.name&&0!==e.name.length||t.push(e.errorMessage)}),t}return{getRequiredFieldValidationErrorMessage:e}}function viewProductCategoryController(e,t,r){function o(){r.getAllProductCategories().success(function(t){t&&t.productCategories&&t.productCategories.length>0&&(e.productCategories=t.productCategories)})}e.productCategories=[],o()}angular.module("productCategoryModule").controller("createProductCategoryController",createProductCategoryController),createProductCategoryController.$inject=["$scope","$timeout","productCategoryService","requiredFieldValidationService"],angular.module("productCategoryModule").controller("editProductCategoryController",editProductCategoryController),editProductCategoryController.$inject=["$scope","$timeout","$location","productCategoryService","requiredFieldValidationService"];var productCategoryModule=angular.module("productCategoryModule",[]);angular.module("productCategoryModule").service("productCategoryService",productCategoryService),productCategoryService.$inject=["$http","$location"],angular.module("productCategoryModule").factory("requiredFieldValidationService",requiredFieldValidationService),angular.module("productCategoryModule").controller("viewProductCategoryController",viewProductCategoryController),viewProductCategoryController.$inject=["$scope","$timeout","productCategoryService"];